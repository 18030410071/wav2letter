cpp_library(
    name = 'libbeamer',
    headers = AutoHeaders.RECURSIVE_GLOB,  # https://fburl.com/424819295
    srcs= [
        'beamer/lib/BMRArray.c',
        'beamer/lib/BMRBuffer.c',
        'beamer/lib/BMRTrie.c',
        'beamer/lib/BMRLM.cc',
        'beamer/lib/BMRDecoder.c',
    ],
    external_deps = [
        'kenlm',
    ],
    preprocessor_flags = [
        "-DBMR_USE_QUICKSELECT", # quickselect instead of qsort
    ]
)

custom_rule(
    name = "beamer-env",
    strict = False,
    output_gen_files = [
        "beamer/env.lua",
    ],
    build_script = "beamer/env.sh",
    build_args = "deeplearning/projects/wav2letter/beamer/env.lua",
)

lua_library(
    name='beamer',
    srcs=glob(['beamer/*.lua'], excludes=['beamer/env.lua']) + [ ":beamer-env" ],
    deps=[
        ':libbeamer',
    ],
    external_deps=[
        ('torch7', None, 'TH'),
    ],
    base_module='',
)

cpp_library(
    name = 'libwav2letter',
    srcs = [
        'wav2letter/utils/utils.c',
        'wav2letter/utils/autosegcriterion.c',
        'wav2letter/utils/viterbi.c',
    ],
    headers = glob(['wav2letter/utils/*.gen.c']),
    external_deps = [
        ('torch7', None, 'TH'),
        ('IntelComposerXE', None, 'mkl_lp64_gomp'),
    ],
    preprocessor_flags = [
        "-Ideeplearning/projects/wav2letter/wav2letter/utils",
        "-fopenmp",
    ],
    compiler_specific_flags = {
        "clang": ["-fopenmp=libgomp"],
    },
)

custom_rule(
    name = "wav2letter-utils-init",
    strict = False,
    output_gen_files = [
        "wav2letter/utils/init.lua",
    ],
    build_script = "wav2letter/utils/init.sh",
    build_args = "deeplearning/projects/wav2letter/wav2letter/utils/init.lua",
)

lua_library(
    name='wav2letter',
    srcs=glob(['wav2letter/**/*.lua'], excludes=['wav2letter/test/test.lua', 'wav2letter/utils/init.lua']) + [ ":wav2letter-utils-init" ],
    deps=[
        '@/torch/oss:nn',
        '@/torch/oss:ProFi',
        '@/torch/fb/fbnn:fbnn',
        '@/torch/fb/fbcunn:fbcunn',
        '@/torch/oss:speech',
        '@/torch/fb/torchnet:torchnet',
        '@/torch/fb/torchnet:torchnet-optim',
        '@/torch/fb/fbtorch:fbtorch',
        '@/torch/fb:gtn',
         ':libwav2letter',
    ],
    external_deps=[
        ('torch-argcheck', None),
        ('torch-class', None),
    ],
    base_module='',
)

lua_unittest(
    name = 'wav2letter_test',
    srcs = [
        "wav2letter/test/test.lua",
    ]
    + util.files('config/**/*.lua'),
    deps = [
        '@/torch/fb/fbtorch:fbtorch',
        ':wav2letter',
    ],
    external_deps = [
        ('torch7', None),
        ('torch-sndfile', None),
    ],
    base_module= '',
    main_module = 'wav2letter.test.test',
)

lua_binary(
    name = 'wav2letter_prof',
    srcs = [
        "wav2letter/test/prof.lua",
        'netutils.lua',
    ],
    deps = [
        '@/torch/fb/fbtorch:fbtorch',
        '@/torch/oss:warpctc',
        ':wav2letter',
    ],
    external_deps = [
        ('torch7', None),
        ('torch-sndfile', None),
    ],
    base_module= '',
    main_module = 'wav2letter.test.prof',
)

lua_binary(
    name='train',
    srcs=[
        'train.lua',
        'data.lua',
        'netutils.lua',
        'transforms.lua',
    ]
    + util.files('config/**/*.lua'),
    deps=[
        ':wav2letter',
    ],
    external_deps=[
        ('torch-sndfile', None),
    ],
    main_module='train',
)

lua_binary(
    name='test',
    srcs=[
        'test.lua',
        'transforms.lua',
    ]
    + util.files('config/**/*.lua'),
    deps=[
        ':wav2letter',
    ],
    external_deps=[
        ('torch-sndfile', None),
    ],
    main_module='test',
)

lua_binary(
    name='decode',
    srcs=[
        'decode.lua',
        'decoder.lua',
    ],
    deps=[
        ':wav2letter',
        ':beamer',
    ],
    main_module='decode',
)

lua_binary(
    name='test-one-file',
    srcs=[
        'test-one-file.lua',
        'transforms.lua',
    ]
    + util.files('config/**/*.lua'),
    deps=[
        ':wav2letter',
    ],
    external_deps=[
        ('torch-sndfile', None),
    ],
    main_module='test-one-file',
)

lua_binary(
    name='plot',
    srcs=[
        'plot.lua',
    ],
    external_deps=[
        ('torch7', None),
        ('torch-paths', None),
        ('torch-gnuplot', None),
    ],
    main_module='plot',
)
