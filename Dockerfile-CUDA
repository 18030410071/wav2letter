# ==================================================================
# module list
# ------------------------------------------------------------------
# Ubuntu           16.04
# CUDA             9.2
# CuDNN            7-dev
# flashlight       cuda-latest  (docker-hub)
# python           3.6          (apt)
# GoogleTest       2fe3bd9      (git)
# libsndfile       bef2abc      (git)
# MKL              2018.4.057   (.tgz)
# FFTW             latest       (apt)
# KenLM            e47088d      (git)
# GLOG             0e4ce7c      (git)
# gflags           latest       (bin)
# python           3.6          (apt)
# ==================================================================

FROM flml/flashlight:cuda-latest

RUN APT_INSTALL="apt-get install -y --no-install-recommends" && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
    # for libsndfile
    autoconf build-essential libasound2-dev \
    libflac-dev libogg-dev libtool libvorbis-dev pkg-config python \
    # for Intel's Math Kernel Library (MKL)
    cpio \
    # FFTW
    libfftw3-dev \
    # for kenlm
    zlib1g-dev libbz2-dev liblzma-dev libboost-all-dev \
    # gflags
    libgflags-dev \
    # for glog
    automake autogen \
    # for receipts data processing
    sox && \
# ==================================================================
# python (for receipts data processing)
# ------------------------------------------------------------------
    PIP_INSTALL="python3 -m pip --no-cache-dir install --upgrade" && \
    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
        software-properties-common \
        && \
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
        python3.6 \
        python3.6-dev \
        && \
    wget -O ~/get-pip.py \
        https://bootstrap.pypa.io/get-pip.py && \
    python3.6 ~/get-pip.py && \
    ln -s /usr/bin/python3.6 /usr/local/bin/python3 && \
    ln -s /usr/bin/python3.6 /usr/local/bin/python && \
    $PIP_INSTALL \
        setuptools \
        && \
    $PIP_INSTALL \
        sox \
        tqdm && \
# ==================================================================
# GoogleTest https://github.com/google/googletest/
# ------------------------------------------------------------------
    cd /tmp && git clone --recursive https://github.com/google/googletest && \
    cd googletest && git checkout 2fe3bd9 && \
    mkdir build && cd build && \
    cmake .. && \
    make -j8 && \
    make install && \
# ==================================================================
# libsndfile https://github.com/erikd/libsndfile.git
# ------------------------------------------------------------------
    cd /tmp && git clone https://github.com/erikd/libsndfile.git && \
    cd libsndfile && git checkout bef2abc9e888142203953addc31c50a192e496e5 && \
    mkdir CMakeBuild && cd CMakeBuild && \
    cmake .. -DCMAKE_BUILD_TYPE=RELEASE && \
    make -j8 && \
    make install && \
# ==================================================================
# MKL https://software.intel.com/en-us/mkl
# ------------------------------------------------------------------
    cd /tmp && wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB && \
    apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB && \
    wget https://apt.repos.intel.com/setup/intelproducts.list -O /etc/apt/sources.list.d/intelproducts.list && \
    sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list' && \
    apt-get update && DEBIAN_FRONTEND=noninteractive $APT_INSTALL intel-mkl-64bit-2018.4-057 && \
# ==================================================================
# KenLM https://github.com/kpu/kenlm
# ------------------------------------------------------------------
    cd /root && git clone https://github.com/kpu/kenlm.git && \
    cd kenlm && git checkout e47088ddfae810a5ee4c8a9923b5f8071bed1ae8 && \
    mkdir build && cd build && \
    cmake .. && \
    make -j8 && make install && \
# ==================================================================
# glog https://github.com/google/glog.git
# ------------------------------------------------------------------
    cd /tmp && git clone https://github.com/google/glog.git && \
    cd glog && git checkout 0e4ce7c0c0f7cda7cc86017abd775cecf04074e0 && \
    ./autogen.sh && ./configure && make && make install && \
# ==================================================================
# config & cleanup
# ------------------------------------------------------------------
    ldconfig && \
    apt-get clean && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/* /tmp/*

RUN mkdir /root/wav2letter
COPY . /root/wav2letter

# ==================================================================
# wav2letter with GPU backend
# ------------------------------------------------------------------
RUN export MKLROOT=/opt/intel/mkl && export KENLM_ROOT_DIR=/root/kenlm && \
    cd /root/wav2letter && mkdir -p build && \
    cd build && cmake .. -DCMAKE_BUILD_TYPE=Release -DCRITERION_BACKEND=CUDA && \
    make -j8
